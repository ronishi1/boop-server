const ObjectId = require('mongoose').Types.ObjectId;
const mongoose = require('mongoose');
const User = require('../models/user-model');
const Comic = require('../models/comic-model');
const ForumPost = require('../models/forum-post-model');
const ForumTopic = require('../models/forum-topic-model');

module.exports = {
  Query: {
  },
  Mutation: {
    createComic: async (_, args, { req,res }) => {
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // REMEMBER TO FIGURE OUT COVER IMAGE
      const {comicInput} = args;
      console.log(comicInput);
      console.log(comicInput.synopsis);
      const userId = new ObjectId(req.userId);
      const forumId = new ObjectId();
      const userObj = await User.findOne({_id:userId});
      console.log(userObj.username);
      const comicId = new ObjectId();
      let comicObj = new Comic({
        _id: comicId,
        series_title: comicInput.series_title,
        author: userId,
        author_username: userObj.username,
        synopsis: comicInput.synopsis,
        genres: comicInput.genres,
        num_chapters: 0,
        chapters: [],
        views: 0,
        num_favorites: 0,
        discussion_post:forumId,
        current_rating: 5,
        num_of_ratings: 0,
        total_ratings: 0,
        publication_date: 0,
        completed: false,
        cover_image: comicInput.cover_image
      });
      console.log(comicObj);
      await comicObj.save();
      console.log("HERE");
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // *****************************************
      // ADD IN THE AUTHOR NAME LATER FOR HERE AND FORUM MUTATIONS
      const discussionTitle = comicInput.series_title + " Discussion";
      const timestamp = Date.now();
      const discussionContent = "Autogenerated discussion post for " + comicInput.series_title;
      // Hard coded objectId for comic discussion topic
      const topicId = new ObjectId("624216a0dd90b5c46c5e24d0");
      // Hard coded user id for automoderator
      const autoModID = new ObjectId("62421d2581c236eea8dd011f");
      const forumPost = new ForumPost ({
        _id: forumId,
        title: discussionTitle,
        content: discussionContent,
        tags: ["Discussion"],
        linked_comic: comicId,
        linked_story: null,
        author: autoModID,
        replies: [],
        num_replies: 0,
        views: 0,
        timestamp: timestamp,
        topic: topicId
      });
      await forumPost.save();

      const topic = await ForumTopic.findOne({_id:topicId});
      topic.posts.push(forumPost);
      await ForumTopic.updateOne({_id:topicId},{posts:topic.posts});

      return comicObj;
    },
  }
};
